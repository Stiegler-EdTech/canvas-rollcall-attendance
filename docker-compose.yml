version: '3.3'

services:
  db:
    image: postgres:9.6-alpine
    environment:
      POSTGRES_PASSWORD: password

  redis:
    image: redis:3-alpine

  minio:
    image: minio/minio
    command: /bin/sh -c "mkdir -p /data/bucket && minio server /data"
    entrypoint: ''
    environment:
      MINIO_DOMAIN: minio.rollcall-attendance.docker
      MINIO_ACCESS_KEY: dev-access-key
      MINIO_SECRET_KEY: dev-secret-key
      VIRTUAL_HOST: bucket.minio.rollcall-attendance.docker

  web:
    build:
      context: .
    links:
      - db
      - redis
      - minio
    environment: &ENV
      RAILS_ENV: production
      ROLLCALL_ROLE: web
      VIRTUAL_HOST: rollcall.canvas-dev.stiegleredtech.org
      DATABASE_URL: postgres://postgres:password@db:5432/rollcall_dev
      REDIS_URL: redis://redis:6379
      # SENTRY_DSN: 'https://foo:bar@sentry.insops.net/35'
      SECRET_KEY_BASE: 'GSOC6DGMsvlLtDkaAagn7HBtxO4FJZECVYVuceZV7LMGMaYTIBXbK5OLa3UC'
      RESQUE_USER: 'admin'
      RESQUE_PASS: 'changeme'
      AWS_ACCESS_KEY_ID: dev-access-key
      AWS_SECRET_ACCESS_KEY: dev-secret-key
      AWS_REGION: 'us-east-1'
      AWS_BUCKET: bucket
      AWS_S3_ENDPOINT: http://minio.rollcall-attendance.docker
      LTI_KEY: 'TkE6YZjyGm46NVGQ7rbL3Lr9eikooFpEbhCKogC'
      LTI_SECRET: 'secret'
      LTI_REQUIRE_CANVAS: 'true'
      HEAP_ENABLED: 'true'
      HEAP_ANALYTICS_APP_ID: "123"
    #ports:
    #  - "0.0.0.0:8080:80"
    external_links:
      - ${PROXY_CONTAINER:-dinghy_http_proxy}:bucket.minio.rollcall-attendance.docker

  work:
    build:
      context: .
    links:
      - db
      - redis
      - minio
    environment:
      <<: *ENV
      ROLLCALL_ROLE: 'worker'
      QUEUE: "*"
    external_links:
      - ${PROXY_CONTAINER:-dinghy_http_proxy}:bucket.minio.rollcall-attendance.docker
